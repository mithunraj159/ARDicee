{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fnil\fcharset0 HelveticaNeue;\f2\fnil\fcharset0 HelveticaNeue-Bold;
}
{\colortbl;\red255\green255\blue255;\red26\green28\blue31;\red255\green255\blue255;\red0\green0\blue0;
}
{\*\expandedcolortbl;;\cssrgb\c13725\c14902\c16078;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww20660\viewh14900\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\qc\partightenfactor0

\f0\b\fs36 \cf0 Swift Interview Preparation\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
- 3 primary collection types - Array, Dictionary, Sets\
\
- Swift introduces advanced types not found on the Objective C - Tuples and Optionals\
\
- Swift is a 
\fs48 Type - Safe language 
\fs36  -  Clear about the types of values , if string is needed we cannot accidentally pass a Int value and also optional string and string is different. We cannot pass optional spring value to a variable which is expecting string value.\
\
- 
\fs48 Type Annotation - 
\fs36 We provide a type annotation when you declare a variable or constant  to be clear about the kinds of values it can store.\
Eg: var name: String\
\
- 
\fs48 Type Inference 
\fs36 - Enables a compiler to find out the type of the constants or variables with the value we provide.\
Eg: var name = \'93Mithun\'94 // This will be identified as String although we have not given the type\
\
- 
\fs48 Type Aliases
\fs36  - Define an alternative name for existing type\
Eg: typealias AudioSample = UInt16\
       var minAudio = AudioSample.min \
\
- Swift provides 2 signed floating point number types\
  1. Double - 64 - bit floating point numbers- Has a precision of 15 decimal digits\
  2. Float -  32 - bit floating point number -  Has a precision of 6 decimal digits\
\
- 
\fs48 Tuples
\fs36  - Group multiple values into a single compound value. The values of the tuples can be of any type and don\'92t have to be of same type.\
Eg: let error404 = (404, \'93Not found\'94)\
\
- Optionals - May contain value or may not contain value\
\
- Forced Unwrapping - ! - Not safe . We assure that there will be value. But if there is not then it will crash\
\
- Optional Binding - if let trial = trial \{\
                                   \}\
\
- Implicitly Unwrapped Optionals - Putting the explanation mark to the type of the variable. It assures that there willl be a value\
Eg: let assumedString: String!\
\
- 
\fs48 Nil - Coalescing Operator
\fs36  - Unwraps a value if there is a value or returns a default value when there Is no value\
 Eg: a?? b\
\
- String is a 
\fs48 Value - Type\
\
-
\fs36  
\fs48 Array
\fs36  is ordered collection of values, 
\fs48 Sets
\fs36  are unordered collections of unique values, 
\fs48 Dictionaries
\fs36  are unordered collections of key - value associations\
\
- 
\f1\b0\fs30 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 he\'a0
\f2\b bounds
\f1\b0 \'a0of an\'a0{\field{\*\fldinst{HYPERLINK "http://developer.apple.com/iPhone/library/documentation/UIKit/Reference/UIView_Class/UIView/UIView.html"}}{\fldrslt \cf0 \ul \ulc0 \strokec4 UIView}}\'a0is the\'a0{\field{\*\fldinst{HYPERLINK "http://developer.apple.com/iPhone/library/documentation/GraphicsImaging/Reference/CGGeometry/Reference/reference.html#//apple_ref/doc/c_ref/CGRect"}}{\fldrslt \cf0 \ul \ulc0 \strokec4 rectangle}}, expressed as a location (x,y) and size (width,height) relative to its own coordinate system (0,0)\
\
- The\'a0
\f2\b frame
\f1\b0 \'a0of an\'a0{\field{\*\fldinst{HYPERLINK "http://developer.apple.com/iPhone/library/documentation/UIKit/Reference/UIView_Class/UIView/UIView.html"}}{\fldrslt \cf0 \ul \ulc0 \strokec4 UIView}}\'a0is the\'a0{\field{\*\fldinst{HYPERLINK "http://developer.apple.com/iPhone/library/documentation/GraphicsImaging/Reference/CGGeometry/Reference/reference.html#//apple_ref/doc/c_ref/CGRect"}}{\fldrslt \cf0 \ul \ulc0 \strokec4 rectangle}}, expressed as a location (x,y) and size (width,height) relative to the superview it is contained within\

\f0\b\fs36 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\
\
\
}